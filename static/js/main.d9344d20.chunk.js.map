{"version":3,"sources":["common/languages.ts","components/SelectLanguage.tsx","components/Translator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["languageCodes","af","sq","am","ar","hy","az","eu","be","bn","bs","bg","ca","ceb","ny","co","hr","cs","da","nl","en","eo","et","tl","fi","fr","fy","gl","ka","de","el","gu","ht","ha","haw","iw","hi","hmn","hu","is","ig","id","ga","it","ja","jw","kn","kk","km","ko","ku","ky","lo","la","lv","lt","lb","mk","mg","ms","ml","mt","mi","mr","mn","my","ne","no","ps","fa","pl","pt","pa","ro","ru","sm","gd","sr","st","sn","sd","si","sk","sl","so","es","su","sw","sv","tg","ta","te","th","tr","uk","ur","uz","vi","cy","xh","yi","yo","zu","SelectLanguage","value","onChange","langs","Object","entries","style","marginTop","marginBottom","InputLabel","Select","variant","labelId","fullWidth","e","target","map","code","label","MenuItem","useStyles","makeStyles","root","margin","padding","maxWidth","display","marginLeft","rootSmall","grid","gridTemplateColumns","columnGap","small","Translator","classes","useState","textToTranslate","setTextToTranslate","translatedText","setTranslatedText","selectedLang","setSelectedLang","loading","setLoading","theme","useTheme","isLarge","useMediaQuery","breakpoints","up","handleTranslate","a","axios","post","src","to","response","data","translated","alert","className","Typography","TextField","rows","multiline","disabled","language","Button","onClick","size","color","navigator","clipboard","writeText","App","AppBar","position","Toolbar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9344d20.chunk.js","sourcesContent":["export const languageCodes = {\n  af: 'Afrikaans',\n  sq: 'Albanian',\n  am: 'Amharic',\n  ar: 'Arabic',\n  hy: 'Armenian',\n  az: 'Azerbaijani',\n  eu: 'Basque',\n  be: 'Belarusian',\n  bn: 'Bengali',\n  bs: 'Bosnian',\n  bg: 'Bulgarian',\n  ca: 'Catalan',\n  ceb: 'Cebuano',\n  ny: 'Chichewa',\n  'zh-cn': 'Chinese Simplified',\n  'zh-tw': 'Chinese Traditional',\n  co: 'Corsican',\n  hr: 'Croatian',\n  cs: 'Czech',\n  da: 'Danish',\n  nl: 'Dutch',\n  en: 'English',\n  eo: 'Esperanto',\n  et: 'Estonian',\n  tl: 'Filipino',\n  fi: 'Finnish',\n  fr: 'French',\n  fy: 'Frisian',\n  gl: 'Galician',\n  ka: 'Georgian',\n  de: 'German',\n  el: 'Greek',\n  gu: 'Gujarati',\n  ht: 'Haitian Creole',\n  ha: 'Hausa',\n  haw: 'Hawaiian',\n  iw: 'Hebrew',\n  hi: 'Hindi',\n  hmn: 'Hmong',\n  hu: 'Hungarian',\n  is: 'Icelandic',\n  ig: 'Igbo',\n  id: 'Indonesian',\n  ga: 'Irish',\n  it: 'Italian',\n  ja: 'Japanese',\n  jw: 'Javanese',\n  kn: 'Kannada',\n  kk: 'Kazakh',\n  km: 'Khmer',\n  ko: 'Korean',\n  ku: 'Kurdish (Kurmanji)',\n  ky: 'Kyrgyz',\n  lo: 'Lao',\n  la: 'Latin',\n  lv: 'Latvian',\n  lt: 'Lithuanian',\n  lb: 'Luxembourgish',\n  mk: 'Macedonian',\n  mg: 'Malagasy',\n  ms: 'Malay',\n  ml: 'Malayalam',\n  mt: 'Maltese',\n  mi: 'Maori',\n  mr: 'Marathi',\n  mn: 'Mongolian',\n  my: 'Myanmar (Burmese)',\n  ne: 'Nepali',\n  no: 'Norwegian',\n  ps: 'Pashto',\n  fa: 'Persian',\n  pl: 'Polish',\n  pt: 'Portuguese',\n  pa: 'Punjabi',\n  ro: 'Romanian',\n  ru: 'Russian',\n  sm: 'Samoan',\n  gd: 'Scots Gaelic',\n  sr: 'Serbian',\n  st: 'Sesotho',\n  sn: 'Shona',\n  sd: 'Sindhi',\n  si: 'Sinhala',\n  sk: 'Slovak',\n  sl: 'Slovenian',\n  so: 'Somali',\n  es: 'Spanish',\n  su: 'Sundanese',\n  sw: 'Swahili',\n  sv: 'Swedish',\n  tg: 'Tajik',\n  ta: 'Tamil',\n  te: 'Telugu',\n  th: 'Thai',\n  tr: 'Turkish',\n  uk: 'Ukrainian',\n  ur: 'Urdu',\n  uz: 'Uzbek',\n  vi: 'Vietnamese',\n  cy: 'Welsh',\n  xh: 'Xhosa',\n  yi: 'Yiddish',\n  yo: 'Yoruba',\n  zu: 'Zulu',\n};\n","import InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport React from 'react';\nimport { languageCodes } from './../common/languages';\n\nexport interface SelectLanguageProps {\n  value: any;\n  onChange: (val: any) => any;\n}\n\nconst SelectLanguage: React.FC<SelectLanguageProps> = ({ value, onChange }) => {\n  const langs = Object.entries(languageCodes);\n  return (\n    <div style={{ marginTop: '20px', marginBottom: '20px' }}>\n      <InputLabel id='select-lang'>Select Language</InputLabel>\n      <Select\n        style={{ marginTop: '15px' }}\n        variant='outlined'\n        labelId='select-lang'\n        value={value}\n        fullWidth={true}\n        onChange={e => onChange(e.target.value)}\n      >\n        {langs.map(([code, label]) => (\n          <MenuItem key={code} value={code}>\n            {label}\n          </MenuItem>\n        ))}\n      </Select>\n    </div>\n  );\n};\n\nexport default SelectLanguage;\n","import {\n  Button,\n  makeStyles,\n  TextField,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport SelectLanguage from './SelectLanguage';\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '30px auto',\n    padding: '0 50px',\n    maxWidth: '1200px',\n    display: 'block',\n    marginLeft: 'auto',\n  },\n  rootSmall: {\n    padding: '0 20px',\n  },\n  grid: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    columnGap: '20px',\n  },\n  small: {\n    gridTemplateColumns: '1fr',\n  },\n});\n\ninterface TranslatorProps {}\n\nconst Translator: React.FC<TranslatorProps> = () => {\n  const classes = useStyles();\n\n  const [textToTranslate, setTextToTranslate] = useState('');\n  const [translatedText, setTranslatedText] = useState('');\n  const [selectedLang, setSelectedLang] = useState('ur');\n  const [loading, setLoading] = useState(false);\n  const theme = useTheme();\n  const isLarge = useMediaQuery(theme.breakpoints.up('sm'));\n\n  const handleTranslate = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post(\n        'https://icd-google-api.herokuapp.com/translate',\n        {\n          src: textToTranslate,\n          to: selectedLang,\n        }\n      );\n      setTranslatedText(response.data.translated);\n    } catch (e) {\n      alert('There was an error' + e);\n    }\n    setLoading(false);\n  };\n\n  const handleLanguageChange = (language: string) => {\n    setSelectedLang(language);\n  };\n\n  return (\n    <div\n      className={\n        isLarge ? classes.root : `${classes.root} ${classes.rootSmall}`\n      }\n    >\n      <div className={isLarge ? classes.grid : `${classes.small}`}>\n        <div>\n          <Typography variant='h6'>Enter Text</Typography>\n          <TextField\n            value={textToTranslate}\n            onChange={e => setTextToTranslate(e.target.value)}\n            fullWidth={true}\n            variant='filled'\n            rows={14}\n            multiline={true}\n          />\n        </div>\n        <div>\n          <Typography variant='h6'>Translation</Typography>\n          <TextField\n            disabled\n            value={translatedText}\n            fullWidth={true}\n            variant='filled'\n            rows={14}\n            multiline={true}\n          />\n        </div>\n      </div>\n\n      <div className={isLarge ? classes.grid : `${classes.small}`}>\n        <div>\n          <SelectLanguage\n            value={selectedLang}\n            onChange={handleLanguageChange}\n          />\n        </div>\n      </div>\n\n      <Typography className={loading ? '' : 'd-none'}>Please Wait</Typography>\n      <div>\n        <Button\n          disabled={loading}\n          style={{ marginTop: '15px' }}\n          onClick={handleTranslate}\n          size='large'\n          color='primary'\n          variant='contained'\n        >\n          Translate\n        </Button>\n        <Button\n          style={{ marginTop: '15px', marginLeft: '10px' }}\n          onClick={() => navigator.clipboard.writeText(translatedText)}\n          size='large'\n          color='secondary'\n          variant='outlined'\n        >\n          Copy\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Translator;\n","import { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport React from 'react';\nimport Translator from './components/Translator';\n\nfunction App() {\n  return (\n    <>\n      <AppBar position='static'>\n        <Toolbar>\n          <Typography variant='h5'>Translator</Typography>\n        </Toolbar>\n      </AppBar>\n      <Translator />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}